name: Build Docker Image and Upload Artifact

on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build JAR and Upload Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Grant permissions to Maven wrapper
        run: chmod +x mvnw

      - name: Build JAR
        run: ./mvnw clean package -DskipTests

      - name: Sanitize branch name
        id: vars
        run: |
          BRANCH_NAME="${GITHUB_REF_NAME//[^a-zA-Z0-9_-]/_}"
          echo "branch=$BRANCH_NAME" >> "$GITHUB_OUTPUT"

      - name: Upload .jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: gamehub-${{ steps.vars.outputs.branch }}-jar
          path: target/*.jar

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get timestamp
        id: meta
        run: echo "BUILD_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> "$GITHUB_OUTPUT"

      - name: Determine Docker tags
        id: tags
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "TAGS=ghcr.io/${GITHUB_REPOSITORY_OWNER}/gamehub:latest" >> "$GITHUB_OUTPUT"
          elif [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            echo "TAGS=ghcr.io/${GITHUB_REPOSITORY_OWNER}/gamehub:dev" >> "$GITHUB_OUTPUT"
          else
            echo "TAGS=" >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push Docker image
        if: steps.tags.outputs.TAGS != ''
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.TAGS }}
          build-args: |
            BUILD_DATE=${{ steps.meta.outputs.BUILD_DATE }}
            BUILD_VERSION=${{ github.sha }}
            IMAGE_DESCRIPTION=GameHub API image built via GitHub Actions
            IMAGE_NAME=gamehub
