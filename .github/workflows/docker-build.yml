name: Build Docker Image and Upload Artifact

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build JAR and Upload Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Grant permissions to Maven wrapper
        run: chmod +x mvnw

      - name: Build JAR
        run: ./mvnw clean package -DskipTests

      - name: Upload .jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: gamehub-${{ github.ref_name }}.jar
          path: target/*.jar

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry üîê
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/gamehub:${{ github.ref_name }}
            ${{ github.ref_name == 'main' && format('ghcr.io/{0}/gamehub:latest', github.repository_owner) || '' }}
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            BUILD_VERSION=${{ github.sha }}
            IMAGE_DESCRIPTION=GameHub API image built via GitHub Actions
            IMAGE_NAME=gamehub
